---
import Footer from '@core/components/footer/footer.astro';
import Navbar from '@core/components/navbar/navbar.astro';

interface Props {
	title?: string;
}

const {title = "CLEAN-UI"} = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta
			name="description"
			content="Curated collections of pristine clean ui components. Elegantly designed, each offering a unique aestheic"
		/>
		<meta
			name="viewport"
			content="width=device-width"
		/>
		<link
			rel="icon"
			type="image/svg+xml"
			href="/favicon.svg"
		/>
		<meta
			name="generator"
			content={Astro.generator}
		/>
		<link rel="stylesheet" href="/styles/typography.css">
		<title>{title}</title>
	</head>
	<body class="bg-background font-restart">
		<Navbar />
		<div class="bg-background pt-24 px-8 w-full min-h-[100dvh]">
			<slot />
		</div>
		<Footer/>
	</body>
</html>
<style is:global>
	::-webkit-scrollbar-track {
		background-color: transparent;
	}

	::-webkit-scrollbar-thumb {
		background-color: transparent;
		border-radius: 10px;
	}

	::-webkit-scrollbar {
		width: 0px;
	}
	::-moz-selection {
		color: white;
		background: #0000FF
	}

	::selection {
		color: white;
		background: #0000FF
	}
	:root {
		box-sizing: border-box;
		min-height: min;
	}
	*{
		user-select: text;
	}
	a {
		all: unset;
	}
	html {
		font-family: 'Regrade', sans-serif;
	}
	code {
	}
</style>
<script >
	
	import LocomotiveScroll from 'locomotive-scroll';
	const options = {
			wrapper: window,
			content: document.documentElement,
			lerp: 0.3,
			duration: 0.5,
			orientation: 'vertical',
			gestureOrientation: 'vertical',
			smoothWheel: true,
			smoothTouch: false,
			wheelMultiplier: 2,
			touchMultiplier: 2,
			normalizeWheel: true,
	}
	const locomotiveScroll = new LocomotiveScroll(options);

	document.addEventListener("DOMContentLoaded", ()=>{
		window.scrollTo(0,0)
	})
</script>